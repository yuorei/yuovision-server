package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.41

import (
	"context"
	"fmt"

	model "github.com/yuorei/video-server/app/domain/models"
	"github.com/yuorei/video-server/graph/generated"
)

// RegisterUser is the resolver for the registerUser field.
func (r *mutationResolver) RegisterUser(ctx context.Context, input model.UserInput) (*model.UserPayload, error) {
	panic(fmt.Errorf("not implemented: RegisterUser - registerUser"))
}

// SubscribeChannel is the resolver for the subscribeChannel field.
func (r *mutationResolver) SubscribeChannel(ctx context.Context, input *model.SubscribeChannelInput) (*model.SubscriptionPayload, error) {
	panic(fmt.Errorf("not implemented: SubscribeChannel - subscribeChannel"))
}

// UnSubscribeChannel is the resolver for the unSubscribeChannel field.
func (r *mutationResolver) UnSubscribeChannel(ctx context.Context, input *model.SubscribeChannelInput) (*model.SubscriptionPayload, error) {
	panic(fmt.Errorf("not implemented: UnSubscribeChannel - unSubscribeChannel"))
}

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*model.User, error) {
	panic(fmt.Errorf("not implemented: Users - users"))
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, id string) (*model.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// UserByAuth is the resolver for the userByAuth field.
func (r *queryResolver) UserByAuth(ctx context.Context) (*model.User, error) {
	panic(fmt.Errorf("not implemented: UserByAuth - userByAuth"))
}

// ID is the resolver for the id field.
func (r *userResolver) ID(ctx context.Context, obj *model.User) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// Videos is the resolver for the videos field.
func (r *userResolver) Videos(ctx context.Context, obj *model.User) ([]*model.Video, error) {
	panic(fmt.Errorf("not implemented: Videos - videos"))
}

// User returns generated.UserResolver implementation.
func (r *Resolver) User() generated.UserResolver { return &userResolver{r} }

type userResolver struct{ *Resolver }
