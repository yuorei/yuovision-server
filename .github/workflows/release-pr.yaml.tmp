name: Create Release PR
on:
  push:
    branches:
      - main

jobs:
  create-release-pr:
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - name: Check Release Branch Exists
        id: check_release_branch
        run: |
          EXISTS=$(git ls-remote --heads origin release | wc -l)
          echo "exists=${EXISTS}" >> "$GITHUB_OUTPUT"

      - name: Create Release Branch
        if: ${{ steps.check_release_branch.outputs.exists == 0 }}
        run: |
          git branch release
          git push origin release

      - name: Check Pull Request Exists
        id: check_pr
        env:
          HEAD_MESSAGE: ${{ github.event.head_commit.message }}
        run: |
          COMMIT_MESSAGE=$(echo "${HEAD_MESSAGE}" | sed -n -e 1p)
          echo "message=${COMMIT_MESSAGE}" >> "$GITHUB_OUTPUT"
          echo "count=$(gh pr list -B release -S 'リリース反映 in:title' | wc -l)" >> "$GITHUB_OUTPUT"

      - name: Create Release Pull Request
        if: ${{ steps.check_pr.outputs.count == 0 }}
        run: |
          gh pr create \
            -B release \
            -t '【リリース反映】${{ steps.check_pr.outputs.message }}' \
            -a ${{ github.actor }} \
            --body-file ./.github/RELEASE_TEMPLATE.md

      - name: Edit Release Pull Request
        if: ${{ steps.check_pr.outputs.count != 0 }}
        run: |
          pr_data=$(gh pr list -B release -S 'リリース反映 in:title' \
            --json "title" \
            | jq -c .[])
          TITLE="$(echo $pr_data | jq -r '.title')"
          echo $TITLE
          gh pr edit ${{ github.ref_name }} \
            -t "${TITLE} / ${{ steps.check_pr.outputs.message }}"
